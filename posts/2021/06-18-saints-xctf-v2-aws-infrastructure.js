/**
 * Script for the MongoDB Shell.
 * @author Andrew Jarombek
 * @since 6/13/2020
 */

connection = new Mongo();
db = connection.getDB("jarombekcom");

content = [
    {
        "el":"note",
        "attributes":{
            "type":"info"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" This is part of a series of articles on SaintsXCTF Version 2.0. The first article in the series provides an ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog/jun-14-2021-saints-xctf-v2-overview"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"overview of the application",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The infrastructure for my website ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://saintsxctf.com/"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" is hosted on ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog?query=AWS&page=1"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"AWS",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":".  SaintsXCTF had AWS infrastructure prior to version 2.0, but it was redesigned and rewritten for the new version.  This article outlines the infrastructure and walks through ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog?query=Terraform&page=1"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Terraform",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" code which configures and builds the infrastructure. ",
                "children":null
            }
        ]
    },
    {
        "el":"subtitle",
        "attributes":{
            "title":"SaintsXCTF Version 2.0 Articles"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"SaintsXCTF Version 2.0 Articles",
                "children":null
            }
        ]
    },
    {
        "el":"ul",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"a",
                        "attributes":{
                            "href":"https://jarombek.com/blog/jun-14-2021-saints-xctf-v2-overview"
                        },
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"Architectural Overview",
                                "children":null
                            }
                        ]
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"AWS Infrastructure",
                                "children":null
                            }
                        ]
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Kubernetes Infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"React Web Application Overview",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Web Application Redux State Configuration",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Web Application Cypress E2E Tests",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Web Application JSS Modular Design",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Web Application Docker & Nginx Configuration",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Flask Python API",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Flask API Testing",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Flask API Docker & Docker Compose Configuration",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Function API Using API Gateway & Lambda",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Auth API Using API Gateway & Lambda",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Database Deployments Using Jenkins",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Database Client on Kubernetes",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"IOS Application Updates and Learning Experiences",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Testing and Continuous Deployment on Jenkins",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Post-Deployment Challenges & Future Improvements",
                        "children":null
                    }
                ]
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Initial Architecture"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Infrastructure Overview",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" SaintsXCTF application infrastructure can be grouped into two categories - AWS and Kubernetes.  This article only discusses the AWS infrastructure, which has a green background in the diagram below.  The Kubernetes infrastructure, which has a red background in the diagram, is discussed in the next article. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-aws-architecture.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" In Terraform code, the SaintsXCTF AWS infrastructure is logically grouped into modules.  These modules include (but are not limited to) a load balancer to the Kubernetes infrastructure, an application asset S3 bucket, a user asset S3 bucket, an authentication REST API, an AWS Lambda function REST API, and a MySQL RDS database.  The other Terraform modules in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"SaintsXCTF infrastructure repository",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" perform smaller tasks such as debugging, database backups, and configuring SSL/TLS certificates.  These are not discussed in this article. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Development and Production Infrastructure"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Development and Production Infrastructure",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" While designing the SaintsXCTF version 2.0 infrastructure, I put a major emphasis on creating separate production and development environments.  Since the initial website version was live during development of version 2.0, I needed a separate non-production configuration to test.  Besides for the domain names and AWS resource names, the infrastructure between the production and development environments was designed to be identical.  This allowed for predictable behavior when building the production environment once the development environment was fully tested.  I plan to continue using the development environment for testing new infrastructure changes going forward. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" Under normal circumstances, the development environment isn’t running in order to save money.  However, setting it up only requires some ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"terraform apply",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" commands invoked from ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/global-jenkins-jobs/tree/master/saints-xctf/infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"Jenkins jobs",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". When running, the web application, main API, authentication API, and function API are accessible from ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"dev.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"dev.api.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"dev.auth.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", and ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"dev.fn.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":".  Their respective production equivalents are accessible from ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"api.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"auth.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", and ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"fn.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" As previously mentioned, the SaintsXCTF AWS Terraform infrastructure is logically grouped into modules.  All these modules are directories at the top level of the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  Many of these modules are configured differently for the development and production environments.  For example, the authentication API module has the following directory structure. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-terraform-module.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" There are three environmental configurations in this module - one for resources shared across all environments, one for production, and one for development.  These environmental configurations invoke the submodules, which in the case of the authentication API are ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"api-gateway",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"lambda",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", and ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"secrets-manager",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". For example, inside ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-com-auth/env/prod",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" is a ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/blob/master/saints-xctf-com-auth/env/prod/main.tf"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"main.tf",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" file which provisions the production infrastructure through the submodules. ",
                "children":null
            }
        ]
    },
    {
        "el":"codesnippet",
        "attributes":{
            "language":"HCL"
        },
        "value":"provider \"aws\" {\n  region = \"us-east-1\"\n}\n\nterraform {\n  required_version = \">= 0.15.0\"\n\n  required_providers {\n    aws = {\n      source = \"hashicorp/aws\"\n      version = \">= 3.42.0\"\n    }\n  }\n\n  backend \"s3\" {\n    bucket = \"andrew-jarombek-terraform-state\"\n    encrypt = true\n    key = \"saints-xctf-infrastructure/saints-xctf-com-auth/env/prod\"\n    region = \"us-east-1\"\n  }\n}\n\nmodule \"lambda\" {\n  source = \"../../modules/lambda\"\n  prod = true\n}\n\nmodule \"api-gateway\" {\n  source = \"../../modules/api-gateway\"\n  prod = true\n\n  authenticate-lambda-name = module.lambda.authenticate-function-name\n  authenticate-lambda-invoke-arn = module.lambda.authenticate-function-invoke-arn\n  token-lambda-name = module.lambda.token-function-name\n  token-lambda-invoke-arn = module.lambda.token-function-invoke-arn\n}\n\nmodule \"secrets-manager\" {\n  source = \"../../modules/secrets-manager\"\n  prod = true\n\n  rotation-lambda-arn = module.lambda.rotate-function-arn\n\n  secret_rotation_depends_on = [\n    module.lambda.rotate-function-arn,\n    module.lambda.rotate-secrets-manager-permission-id,\n    module.lambda.rotate-log-group-id\n  ]\n}\n",
        "children":null
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform submodules are invoked with certain input variables, including a ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"prod",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" flag.  This variable determines whether the infrastructure needs to be built in the production environment (",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"true",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":") or the development environment (",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"false",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":"). Most of the modules I talk about in the upcoming segments follow this environment/submodule pattern. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Load Balancer to EKS"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Load Balancer to EKS",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module which creates an AWS Application Load Balancer to route traffic to ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog?query=aws%20eks&page=1"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"AWS EKS",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" is unique compared to the other modules discussed in this article.  Instead of using the AWS Terraform provider to build the infrastructure, the load balancer is created by the Kubernetes Terraform provider.  Specifically, the EKS cluster has an ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog/sep-28-2020-eks#alb-ingress-controller-and-external-dns"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"ALB Ingress Controller",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" (now known as an ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"AWS Load Balancer Controller",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":") running in a pod.  This ingress controller is capable of building load balancers that route traffic to Kubernetes services. Using the Kubernetes Terraform provider, an ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"Ingress",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" object is created with certain annotations, resulting in the ingress controller provisioning load balancer infrastructure in AWS. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" In the context of SaintsXCTF, both the web application and main API are hosted on Kubernetes.  The load balancer created by the ingress controller routes traffic to Kubernetes for both the ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" and ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"api.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" domains.  The Terraform module for the load balancer and Kubernetes Ingress object exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/saints-xctf-com-ingress"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" saints-xctf-com-ingress",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  I will provide more details about this code in my upcoming article on SaintsXCTF Kubernetes infrastructure. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Application Asset S3 Bucket"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Application Asset S3 Bucket",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" SaintsXCTF contains images and videos which are hosted in an S3 bucket behind a CloudFront distribution. I refer to this bucket as the \"application asset S3 bucket\", and it is accessible from ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":".  I wrote an ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog/feb-15-2020-s3-react"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"article",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" about hosting static websites on S3 and CloudFront, and the concept is similar for ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". S3 holds the images and videos as objects, and the CloudFront CDN speeds up the retrieval of these assets. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-saints-xctf-com-asset.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module for the application asset S3 bucket exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/saints-xctf-com-asset"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" saints-xctf-com-asset",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  In this module there is just one production environment configuration. There is no separate development configuration since the assets are the same for both development and production environments.  Also, during development, there is no harm in adding additional assets that aren't yet accessible on the production website. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" At a high level, the ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" module contains a ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/blob/master/saints-xctf-com-asset/main.tf"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"main.tf",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" file with the following resources. ",
                "children":null
            }
        ]
    },
    {
        "el":"codesnippet",
        "attributes":{
            "language":"HCL"
        },
        "value":"#-----------------------\n# Existing AWS Resources\n#-----------------------\n\ndata \"aws_acm_certificate\" \"wildcard-saintsxctf-com-cert\" {\n  domain = \"*.saintsxctf.com\"\n}\n\ndata \"aws_acm_certificate\" \"wildcard-asset-saintsxctf-com-cert\" {\n  domain = \"*.asset.saintsxctf.com\"\n}\n\ndata \"aws_route53_zone\" \"saintsxctf\" {\n  name = \"saintsxctf.com.\"\n}\n\n#--------------------------------------\n# New AWS Resources for S3 & CloudFront\n#--------------------------------------\n\nresource \"aws_s3_bucket\" \"asset-saintsxctf\" {...}\n\nresource \"aws_cloudfront_distribution\" \"asset-saintsxctf-distribution\" {...}\n\nresource \"aws_cloudfront_origin_access_identity\" \"origin-access-identity\" {...}\n\nresource \"aws_cloudfront_distribution\" \"www-asset-saintsxctf-distribution\" {...}\n\nresource \"aws_route53_record\" \"asset-saintsxctf-a\" {...}\n\nresource \"aws_route53_record\" \"www-asset-saintsxctf-a\" {...}\n\n#-------------------\n# S3 Bucket Contents\n#-------------------\n\nresource \"aws_s3_bucket_object\" \"saintsxctf-png\" {...}\n",
        "children":null
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" First, existing ACM certificates are retrieved so that HTTPS requests to ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" are secured by SSL/TLS certificates. These certificates are used in the ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_cloudfront_distribution",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resources for building CloudFront distributions.  Next, the existing ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" Route53 zone is retrieved for use in creating DNS A records for ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" and ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"www.asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" Next comes the new AWS resources.  The S3 bucket containing SaintsXCTF assets is created with the ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_s3_bucket",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resource. There are two CloudFront distributions created for the S3 bucket - one for ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" and another for ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"www.asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". These are created with the ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_cloudfront_distribution",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resource. Each CloudFront distribution also gets a Route53 A record, created by the ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_route53_record",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resources. The final resources are the S3 bucket objects, which are images and videos. These are created with ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_s3_bucket_object",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resources. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"User Asset S3 Bucket"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"User Asset S3 Bucket",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" Similarly to how the ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"asset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" S3 bucket contains application assets for the SaintsXCTF website, the ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"uasset.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" S3 bucket contains user assets. These assets include profile pictures and group pictures. The Terraform module for the user asset S3 bucket is nearly identical to the application asset S3 bucket. One main difference is user assets (S3 objects) are not declared as resources in the Terraform code. Instead, they are uploaded by users through the website. I will discuss this process in a future article when going over the SaintsXCTF Lambda Function API. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module for the application user asset S3 bucket exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/saints-xctf-com-uasset"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-com-uasset",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-saints-xctf-com-uasset.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Authentication REST API"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Authentication REST API",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The SaintsXCTF application has four AWS Lambda functions related to authentication, two of which are exposed through a REST API set up with API Gateway.  The general premise of the authentication API is that SaintsXCTF uses ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://jarombek.com/blog/mar-11-2018-jwt"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"JWTs",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" to authenticate users.  With a proper JWT, users can make API calls and operate within the website and mobile applications. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module for the authentication API exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/saints-xctf-com-auth"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-com-auth",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  The authentication API also has a separate ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-auth"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-auth",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository for the AWS Lambda function source code. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-saints-xctf-com-auth.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The infrastructure diagram above shows the four authentication-based AWS Lambda functions. They are ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFAuthenticate",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFToken",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFAuthorizer",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":", and ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFRotate",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFAuthenticate",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" and ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFToken",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" are exposed through the authentication API, while ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFAuthorizer",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" and ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"SaintsXCTFRotate",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" are only for internal use. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" All four AWS Lambda functions are written in Python.  Their general use is as follows: ",
                "children":null
            }
        ]
    },
    {
        "el":"ol",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" Upon sign in, the ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/token",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" endpoint is invoked, which calls the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"SaintsXCTFToken",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" function. The user’s credentials are passed with this request and the response contains a JWT if the credentials are valid. ",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" Every time an API call is made to ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://api.saintsxctf.com",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" which requires authentication, the ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/authenticate",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" endpoint is invoked behind the scenes by the API.  This endpoint calls the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":null,
                        "value":"SaintsXCTFAuthenticate",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" function. The JWT token received from ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/token",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" is passed in the request body of ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/authenticate",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":", and if the JWT is valid the endpoint returns ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"true",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":". Otherwise, it returns ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"false",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":". The SaintsXCTF API handles the response from ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/authenticate",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" by proceeding with the request if the response is ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"true",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":". Otherwise, it returns an HTTP 403 Forbidden error code. ",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" When requests are made to the ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://fn.saintsxctf.com",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" API Gateway REST API which require authorization, they use the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"SaintsXCTFAuthorizer",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" as a lambda authorizer. The JWT token received from ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://auth.saintsxctf.com/token",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" is passed in the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"Authorization",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" request header to ",
                        "children":null
                    },
                    {
                        "el":"strong",
                        "attributes":null,
                        "value":null,
                        "children":[
                            {
                                "el":"#text",
                                "attributes":null,
                                "value":"https://fn.saintsxctf.com",
                                "children":null
                            }
                        ]
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":". If the authorizer function determines that the JWT is valid, it gives the API Gateway endpoint permission to call its corresponding AWS Lambda function.  If the JWT is invalid, invoking the AWS Lambda function is forbidden. ",
                        "children":null
                    }
                ]
            },
            {
                "el":"li",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" The JWT tokens created by the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"SaintsXCTFToken",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" AWS Lambda function are signed using an RS256 (RSA Signature with SHA-256) algorithm",
                        "children":null
                    },
                    {
                        "el":"sup",
                        "attributes":null,
                        "value":"1",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":". To perform this signing, a public key and private key are stored in AWS SecretsManager. For additional security, these public and private keys are rotated on a regular basis with the ",
                        "children":null
                    },
                    {
                        "el":"code",
                        "attributes":{
                            "className":"jarombek-inline-code"
                        },
                        "value":"SaintsXCTFRotate",
                        "children":null
                    },
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":" AWS Lambda function. This limits the damage if an unwanted user gains access to the public and private keys, since their ability to sign tokens would only last until the next rotation. ",
                        "children":null
                    }
                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" In a future article I will discuss all the authentication functions in more detail and step through their code. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Function REST API"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Function REST API",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The SaintsXCTF application has another REST API created with API Gateway and AWS Lambda called the \"Function REST API\". This API is accessible from ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"https://fn.saintsxctf.com",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". It includes endpoints for sending emails and uploading pictures.  The AWS Lambda functions used by the REST API endpoints are written in Python and JavaScript. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module for the function API exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/saints-xctf-com-fn"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-com-fn",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  The function API also has a separate ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-functions"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-functions",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository for the AWS Lambda function source code. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-saints-xctf-com-fn.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" As will be the case with the authentication API, a future article will be dedicated to the function API. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"MySQL RDS Database"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"MySQL RDS Database",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The one main piece of infrastructure that didn’t change in SaintsXCTF version 2.0 was the RDS MySQL database.  This database holds all the persistent data used by the application, such as user information and exercise logs. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" The Terraform module for the RDS MySQL database exists in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/tree/master/database"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"database",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" directory in the ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"saints-xctf-infrastructure",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" repository.  I also have a private repository which holds SQL scripts for database deployments. ",
                "children":null
            }
        ]
    },
    {
        "el":"figure",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"img",
                "attributes":{
                    "className":"jarombek-blog-image",
                    "src":"https://asset.jarombek.com/posts/6-18-21-saints-xctf-database.png"
                },
                "value":null,
                "children":[

                ]
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" At a high level, the ",
                "children":null
            },
            {
                "el":"strong",
                "attributes":null,
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"database",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" module contains a ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure/blob/master/database/modules/rds/main.tf"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"main.tf",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" file with the following resources. ",
                "children":null
            }
        ]
    },
    {
        "el":"codesnippet",
        "attributes":{
            "language":"HCL"
        },
        "value":"resource \"aws_security_group\" \"saints-xctf-database-security\" {...}\n\nresource \"aws_db_instance\" \"saints-xctf-mysql-database\" {...}\n\nresource \"aws_db_subnet_group\" \"saints-xctf-mysql-database-subnet\" {...}\n\nresource \"aws_cloudwatch_metric_alarm\" \"saints-xctf-mysql-database-storage-low-alarm\" {...}\n",
        "children":null
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_db_instance",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" is the main AWS resource that creates the RDS MySQL database.  ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_security_group",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" provides other subnets in the SaintsXCTF VPC access to make connections to the database, while ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_db_subnet_group",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" specifies two subnets that the database exists within.  Since both subnets are housed in different AWS AZs (Availability Zones), this configuration makes the database highly available, in the case that one AWS AZ goes down. Finally, the ",
                "children":null
            },
            {
                "el":"code",
                "attributes":{
                    "className":"jarombek-inline-code"
                },
                "value":"aws_cloudwatch_metric_alarm",
                "children":null
            },
            {
                "el":"#text",
                "attributes":null,
                "value":" resource creates a CloudWatch alarm in case the RDS instance runs low on storage. ",
                "children":null
            }
        ]
    },
    {
        "el":"sectiontitle",
        "attributes":{
            "title":"Conclusions"
        },
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":"Conclusions",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" In many ways, an application is only as good as the foundation it is built upon.  The AWS infrastructure for SaintsXCTF keeps the application running with little downtime, which is key for a good user experience  It also is modularized, allowing me to add new components and drop old ones easily. This enables future application updates to be smaller in scope than version 2.0, which completely rewrote the entire codebase. ",
                "children":null
            }
        ]
    },
    {
        "el":"p",
        "attributes":null,
        "value":null,
        "children":[
            {
                "el":"#text",
                "attributes":null,
                "value":" In my next SaintsXCTF article I’ll discuss the other crucial piece of infrastructure for the application: Kubernetes on EKS.  All the AWS infrastructure code for SaintsXCTF can be found on ",
                "children":null
            },
            {
                "el":"a",
                "attributes":{
                    "href":"https://github.com/AJarombek/saints-xctf-infrastructure"
                },
                "value":null,
                "children":[
                    {
                        "el":"#text",
                        "attributes":null,
                        "value":"GitHub",
                        "children":null
                    }
                ]
            },
            {
                "el":"#text",
                "attributes":null,
                "value":". ",
                "children":null
            }
        ]
    }
];

preview = content.slice(0, 2);

postName = "jun-18-2021-saints-xctf-v2-aws-infrastructure";
postDate = new Date('2021-06-18T12:00:00');
existingPost = db.posts.findOne({name: postName});

postViews = (existingPost) ? existingPost.views : 0;

db.posts.remove({name: postName});
db.posts_content.remove({name: postName});

db.posts.insertOne({
    name: postName,
    title: "SaintsXCTF Version 2.0: AWS Infrastructure",
    description: `In many ways, an application is only as good as the foundation it is built upon.  The AWS 
        infrastructure for SaintsXCTF keeps the application running with little downtime, which is key for a good 
        user experience.  It also is modularized, allowing me to add new components and drop old ones easily.`,
    date: postDate,
    type: "Retrospective",
    views: postViews,
    tags: [
        {
            name: "AWS",
            picture: "https://asset.jarombek.com/logos/aws.png",
            color: "aws"
        },
        {
            name: "Terraform",
            picture: "https://asset.jarombek.com/logos/terraform.png",
            color: "terraform"
        },
        {
            name: "HCL"
        },
        {
            name: "AWS API Gateway",
            picture: "https://asset.jarombek.com/logos/apigateway.svg",
            color: "apigateway"
        },
        {
            name: "AWS Lambda",
            picture: "https://asset.jarombek.com/logos/awslambda.png",
            color: "awslambda"
        },
        {
            name: "AWS S3",
            picture: "https://asset.jarombek.com/logos/awss3.svg",
            color: "awss3"
        },
        {
            name: "AWS CloudFront",
            picture: "https://asset.jarombek.com/logos/aws-cloudfront.svg",
            color: "awscloudfront"
        },
        {
            name: "AWS RDS",
            picture: "https://asset.jarombek.com/logos/awsrds.png",
            color: "awsrds"
        },
        {
            name: "AWS EC2",
            picture: "https://asset.jarombek.com/logos/ec2.png",
            color: "ec2"
        }
    ],
    preview,
    previewString: JSON.stringify(preview),
    sources: [
        {
            startName: "\"JWT signing algorithms RS256 vs HS256\", ",
            endName: "",
            linkName: "https://community.auth0.com/t/jwt-signing-algorithms-rs256-vs-hs256/7720",
            link: "https://community.auth0.com/t/jwt-signing-algorithms-rs256-vs-hs256/7720"
        }
    ]
});

db.posts_content.insertOne({
    name: postName,
    date: postDate,
    content,
    contentString: JSON.stringify(content)
});
